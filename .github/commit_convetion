## COMMIT CONVENTION

## TYPE (SUBJECT)

**Feat** : 새로운 기능을 추가하는 경우 <br />
**Fix** : 버그를 고친경우 <br />
Docs : 문서를 수정한 경우 <br />
Style : 코드 포맷 변경, 세미콜론 누락, 코드 수정이 없는경우 <br />
Refactor : 코드 리펙토링 <br />
Test : 테스트 코드. 리펙토링 테스트 코드를 추가했을 때 <br />
Chore : 빌드 업무 수정, 패키지 매니저 수정 <br />
Design : CSS 등 사용자가 UI 디자인을 변경했을 때 <br />
Rename : 파일명(or 폴더명) 을 수정한 경우 <br />
Remove : 코드(파일) 의 삭제가 있을 때. "Clean", "Eliminate" 를 사용하기도 함 <br />

## 영어로 제목을 작성하는 경우

만일 영어로 작성한다면 다음의 규칙을 따릅니다. <br />

1. 제목은 50자를 넘기지 않고, 대문자로 작성하며 마침표를 붙이지 않습니다. <br />
2. 제목은 과거형을 사용하지 않고, 명령조로 시작합니다. <br />
ex)Fixed 가 아닌, Fix 로 작성. ( Fixed:... => Fix : "Modify album buy bug" 로 작성하기 ) <br />

## 한글로 제목을 작성하는 경우

1. "고침", "추가", "변경" 등의 명령조 로 시작합니다. <br />
ex) Feat: "추가 get data api 함수" 
2. 마침표를 붙이지 않습니다. <br />
3. 대게 어떤 작업을 하였는지 표기를 해둡니다.


##  본문 (BODY)

1. **선택사항** 입니다. (본문은 꼭 작성 안해도 됨) <br />
2. 부연설명이 필요하거나 커밋의 이유를 설명할 경우 작성해주면 됩니다. <br />
3. 본문 내용은 어떻게 변경했는지 보다, 무엇을 변경했는지 또는 왜 변경했는지 를 설명하도록 합시다. <br />
4. 제목과 구분되기 위해 공백 한 줄을 띄워서 작성해줍시다. <br />

<hr />

## ISSUE 작성하기

https://www.youtube.com/watch?v=9FZaYz0s8s4 << 해당 링크를 참조 바랍니다.
